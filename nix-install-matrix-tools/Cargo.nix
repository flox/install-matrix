# Generated by carnix 0.9.8: carnix generate-nix --src .
{ lib, buildPlatform, buildRustCrate, buildRustCrateHelpers, cratesIO, fetchgit }:
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
rec {
  crates = cratesIO // rec {
# nix-install-matrix-tools-0.1.0

    crates.nix_install_matrix_tools."0.1.0" = deps: { features?(features_.nix_install_matrix_tools."0.1.0" deps {}) }: buildRustCrate {
      crateName = "nix-install-matrix-tools";
      version = "0.1.0";
      authors = [ "Graham Christensen <graham.christensen@target.com>" ];
      src = exclude [ ".git" "target" ] ./.;
      dependencies = mapFeatures features ([
        (cratesIO.crates."regex"."${deps."nix_install_matrix_tools"."0.1.0"."regex"}" deps)
        (cratesIO.crates."structopt"."${deps."nix_install_matrix_tools"."0.1.0"."structopt"}" deps)
      ]);
    };
    features_.nix_install_matrix_tools."0.1.0" = deps: f: updateFeatures f (rec {
      nix_install_matrix_tools."0.1.0".default = (f.nix_install_matrix_tools."0.1.0".default or true);
      regex."${deps.nix_install_matrix_tools."0.1.0".regex}".default = true;
      structopt."${deps.nix_install_matrix_tools."0.1.0".structopt}".default = true;
    }) [
      (cratesIO.features_.regex."${deps."nix_install_matrix_tools"."0.1.0"."regex"}" deps)
      (cratesIO.features_.structopt."${deps."nix_install_matrix_tools"."0.1.0"."structopt"}" deps)
    ];


# end

  };

  nix_install_matrix_tools = crates.crates.nix_install_matrix_tools."0.1.0" deps;
  __all = [ (nix_install_matrix_tools {}) ];
  deps.aho_corasick."0.6.6" = {
    memchr = "2.0.1";
  };
  deps.ansi_term."0.11.0" = {
    winapi = "0.3.5";
  };
  deps.atty."0.2.11" = {
    termion = "1.5.1";
    libc = "0.2.43";
    winapi = "0.3.5";
  };
  deps.bitflags."1.0.4" = {};
  deps.clap."2.32.0" = {
    atty = "0.2.11";
    bitflags = "1.0.4";
    strsim = "0.7.0";
    textwrap = "0.10.0";
    unicode_width = "0.1.5";
    vec_map = "0.8.1";
    ansi_term = "0.11.0";
  };
  deps.lazy_static."1.1.0" = {
    version_check = "0.1.4";
  };
  deps.libc."0.2.43" = {};
  deps.memchr."2.0.1" = {
    libc = "0.2.43";
  };
  deps.nix_install_matrix_tools."0.1.0" = {
    regex = "1.0.2";
    structopt = "0.2.10";
  };
  deps.proc_macro2."0.4.13" = {
    unicode_xid = "0.1.0";
  };
  deps.quote."0.6.8" = {
    proc_macro2 = "0.4.13";
  };
  deps.redox_syscall."0.1.40" = {};
  deps.redox_termios."0.1.1" = {
    redox_syscall = "0.1.40";
  };
  deps.regex."1.0.2" = {
    aho_corasick = "0.6.6";
    memchr = "2.0.1";
    regex_syntax = "0.6.2";
    thread_local = "0.3.6";
    utf8_ranges = "1.0.0";
  };
  deps.regex_syntax."0.6.2" = {
    ucd_util = "0.1.1";
  };
  deps.strsim."0.7.0" = {};
  deps.structopt."0.2.10" = {
    clap = "2.32.0";
    structopt_derive = "0.2.10";
  };
  deps.structopt_derive."0.2.10" = {
    proc_macro2 = "0.4.13";
    quote = "0.6.8";
    syn = "0.14.9";
  };
  deps.syn."0.14.9" = {
    proc_macro2 = "0.4.13";
    quote = "0.6.8";
    unicode_xid = "0.1.0";
  };
  deps.termion."1.5.1" = {
    libc = "0.2.43";
    redox_syscall = "0.1.40";
    redox_termios = "0.1.1";
  };
  deps.textwrap."0.10.0" = {
    unicode_width = "0.1.5";
  };
  deps.thread_local."0.3.6" = {
    lazy_static = "1.1.0";
  };
  deps.ucd_util."0.1.1" = {};
  deps.unicode_width."0.1.5" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.utf8_ranges."1.0.0" = {};
  deps.vec_map."0.8.1" = {};
  deps.version_check."0.1.4" = {};
  deps.winapi."0.3.5" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
}
